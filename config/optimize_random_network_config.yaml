bounds:
  EE_connection_prob: !!python/tuple
  - 1.0E-4
  - .8
  EI_connection_prob: !!python/tuple
  - 1.0E-4
  - .8
  IE_connection_prob: !!python/tuple
  - 1.0E-4
  - .8
  II_connection_prob: !!python/tuple
  - 1.0E-4
  - .8
  FF_connection_weight: !!python/tuple
  - 0.
  - 20.
  EE_connection_weight: !!python/tuple
  - 0.
  - 5.
  EI_connection_weight: !!python/tuple
  - 0.
  - 5.
  II_connection_weight: !!python/tuple
  - 0.
  - 5.
  IE_connection_weight: !!python/tuple
  - 0.
  - 5.
  FF_mean_freq: !!python/tuple
  - .15
  - 200.
feature_names:
- E_peak_rate
- I_peak_rate
- E_mean_rate
- I_mean_rate
update_context:
- - optimize_random_network
  - update_context
get_features_stages:
- source: optimize_random_network
  compute_features: compute_features
get_objectives:
  optimize_random_network: get_objectives
kwargs:
  verbose: True
objective_names:
- E_peak_rate
- I_peak_rate
- E_mean_rate
- I_mean_rate
optimization_title: random_network
param_gen: PopulationAnnealing
param_names:
- EE_connection_prob
- EI_connection_prob
- II_connection_prob
- IE_connection_prob
- FF_connection_weight
- EE_connection_weight
- EI_connection_weight
- II_connection_weight
- IE_connection_weight
- FF_mean_freq
target_range:
  E_peak_rate: 5.
  I_peak_rate: 10.
  E_mean_rate: 2.
  I_mean_rate: 11.
target_val:
  E_peak_rate: 10.
  I_peak_rate: 30.
  E_mean_rate: 3.
  I_mean_rate: 3.5
x0:
  EE_connection_prob: 0.1
  EI_connection_prob: 0.1
  IE_connection_prob: 0.1
  II_connection_prob: 0.1
  FF_connection_weight: 2.
  EE_connection_weight: 2.
  EI_connection_weight: 2.
  IE_connection_weight: .5
  II_connection_weight: .5
  FF_mean_freq: 100
